type User {
	id: ID
	firstName: String
	lastName: String
	email: String
	phone: String
	isAdmin: Boolean
	isArchived: Boolean
	createdAt: Time
	updatedAt: Time
}

type UserResult {
	users: [User!]!
	total: Int!
}

input UpdateUser {
	firstName: NullString
	lastName: NullString
	email: NullString
	phone: NullString
}

extend type Query {
	users(search: SearchFilter!): UserResult!

	user(id: ID, email: String): User!
	me: User!
}

extend type Mutation {
	superAdminCreate(input: UpdateUser!): User!
	userCreate(input: UpdateUser!): User!
	userUpdate(id: ID!, input: UpdateUser!): User!
	resendEmailVerification(email: String!): Boolean!

	userArchive(id: ID!): User!
    userUnarchive(id: ID!): User!
}